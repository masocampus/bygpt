# 알고리즘 - 처리해야 할 작업의 순서를 정리해 놓은 일련의 단계

# 알고리즘 표현 방법
# 1. 자연어 - natural language4
# 2. 순서도 - flow language
# 3. 가상 코드 - pseudo code
# 4. 프로그래밍 언어 - programming language

# 알고리즘 절차에는 순차 구조, 선택 구조, 반복 구조가 있음


# 주사위 게임 구현을 위한 기본 설계 진행하기

# 기본 로직 설계
# A, B 두 사람이 주사위를 던져서 더 큰 수가 나오면 이기는 게임을 구현. 

# 발생할 수 있는 상황 정리
# A가 이긴다
# B가 이긴다
# A,B가 비긴다

# 생각해볼 점
# 1) 주사위를 던지면 1~6 사이의 무작위 수(Random Number - 난수)가 발생함
# 2) 파이썬에서는 이러한 무작위 난수를 어떻게 발생시킬 수 있을까? 

# 외부 모듈이라는 개념이 존재함
# 난수 발생을 위한 외부 모듈을 활용해야 함
# 대부분 언어와 마찬가지로 파이썬에서는 난수 발생을 위한 외부 모듈이 존재함
# 외부 모듈이지만 많이 사용하는 경우에는 파이썬 설치시에 기본으로 제공함
# 기본으로 제공하지 않는 경우에는 "pip install 모듈명" 명령어로 수동 설치를 진행함

# 외부 모듈을 파이썬에서 사용하는 방법
# 내장된 기능이 아니기 때문에 명시적으로 사용한다는 점을 선언해줘야 사용 가능
# 방식1 : import 모듈명
# 방식2 : import 모듈명 as 별명
# 방식3 : from 모듈명 import 메소드명

# 모듈? 라이브러리? 패키지? 란 무엇인가? 

# 1) 모듈이란 - 특정 기능을 하는 컴퓨터 시스템이나 프로그램 단위로 
# 재사용이 가능한 코드 집합

# 2) 패키지란 - 여러 기능을 가진 모듈을 주제에 맞게 묶어 놓은 것

# 3) 라이브러리란? - 비슷한 주제의 패키지를 묶어둔 것

# 그러나, 일반적으로는 모듈, 라이브러리, 패키지의 의미를 엄격하게 구분하지 않고
# 비슷한 의미로 사용하는 경우가 많다. 

# 함수? 메소드? 란 무엇인가? 

# 1) 함수 - 특정한 동작을 할 수 있도록 미리 준비되어 있는 코드로
#           코드 작성시 함수명(인자) 방식으로 호출해서 사용할 수 있다. 

# 2) 메소드 - 함수와 동일한 개념이나, 외부 모듈(클래스)에 있는 경우를 
#           메소드(method)라 지칭한다. 

# 일반적으로 함수, 메소드를 엄격하게 구분하지 않고 동의어로 쓰는 경우가 많다. 

# 외부 모듈 불러오기와 외부 모듈 함수(메소드) 사용방법 - 기본형식
# 방식1 - 모듈명.함수
# import random
# rand_num = random.randrange(1, 7) # 1, 2, 3, 4, 5, 6 
# print(rand_num)

# 동전던지기 모델링하기
# import random
# coin = random.randrange(0,2) # 0, 1
# print(coin)

# 외부 모듈 불러오기와 외부 모듈 함수 사용방법 - 별칭사용 형식
# 사용방법 : 별칭.함수
# import random as rn
# dice = rn.randrange(1,7)
# print(dice)

# 외부 모듈 불러오기와 외부 모듈 함수 사용방법 - random 중 randrange만 사용 예정
# 사용방법 : 함수 (print와 같은 내장함수와 동일하게 사용 가능해짐)
# from random import randrange
# dice = randrange(1, 7)
# print(dice)

# 함수 관련 Tip) 해당 모듈에 어떤 메소드들이 들어 있는지 확인하는 방법
# "모듈명" 또는 "모듈명.메소드 시작 문자 몇 개"까지 타이핑하고, 
# Tab 키를 누르면 어떤 함수들을 제공하는지 알 수 있음
# import random
# random.Random